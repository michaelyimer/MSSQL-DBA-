-- QUERY 1: HOW TO CREATE NEW DATABASE?
CREATE DATABASE EmployeeDatabase

-- QUERY 2: HOW TO CONNECT TO ABOVE DATABASE?
USE EmployeeDatabase

-- QUERY 3: HOW TO CREATE NEW TABLE IN ABOVE DATABASE?
CREATE TABLE EMPLOYEE_INFO			
 (
	EmployeeID       INT,			-- this column stores DIGITS : 0, -10, 99, etc..
    EmployeeName     CHAR (30),		-- this column stores up to 30 CHARACTERS 
	EmployeeCountry  VARCHAR(40),	-- this column stores up to 40 CHARACTERS 
	EmployeeSalary   INT			-- this column stores DIGITS : 0, -10, 99, etc..
)

-- CHAR	:	TO STORE STATIC, FIXED VALUES.					EX:	USERNAME
-- VARCHAR: TO STORE DYNAMIC, CHANGING (VARYING) VALUES.	EX: PASSWORD


-- QUERY 4: HOW TO INSERT DATA INTO ABOVE TABLE?
-- BATCH : A COLLECTION OF SQL STATEMENTS
INSERT 	INTO	EMPLOYEE_INFO VALUES (1001, 'AMIN', 'CANADA', 45678)
INSERT			EMPLOYEE_INFO VALUES (1002, 'JOHN',  'CANADA', 60000)
INSERT			EMPLOYEE_INFO VALUES (1003, 'JEFF',  'USA', 36363)
INSERT   INTO	EMPLOYEE_INFO VALUES (1004, 'JACK',  'CANADA', 60000)
INSERT   INTO	EMPLOYEE_INFO VALUES (1005, 'JEFF',  'USA', NULL),  (1006, 'JENY',  'USA', NULL)

-- NULL : MEANS, AN UNDEFINED VALUE

-- QUERY 5: HOW TO REPORT OR VERIFY ABOVE TABLE DATA?
SELECT * FROM EMPLOYEE_INFO				-- * MEANS TO REPORT ALL COLUMNS IN A TABLE

-- QUERY 6: HOW TO REPORT ALL EMPLOYEES FROM CANADA ?
SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeCountry = 'CANADA'		-- WHERE : USED FOR CONDITIONS

-- QUERY 7: HOW TO REPORT ALL EMPLOYEES FROM USA OR CANADA ?
SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeCountry = 'USA'  OR  EmployeeCountry = 'CANADA'

-- QUERY 8: HOW TO REPORT ALL EMPLOYEES FROM USA OR CANADA ?
SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeCountry  IN ( 'USA','CANADA')

-- QUERY 9: HOW TO REPORT ALL EMPLOYEES EXCEPT FROM USA OR CANADA ?
SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeCountry NOT IN ( 'USA','CANADA')



-- QUERY 10: HOW TO REPORT LIST OF ALL EMPLOYEES WHOSE SALARY IS BETWEEN 30000 AND 60000?
SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeSalary BETWEEN 30000 AND 60000

-- QUERY 11: HOW TO REPORT LIST OF ALL EMPLOYEES WHOSE SALARY OUTSIDE THE RANGE OF 20000 AND 40000?
SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeSalary NOT BETWEEN 20000 AND 40000



-- QUERY 12: HOW TO REPORT ALL EMPLOYEES WHOSE FIRST NAME STARTS WITH LETTER 'J'?
 SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeName  LIKE 'J%'   

-- QUERY 13: HOW TO REPORT ALL EMPLOYEES WHOSE FIRST NAME NOT START WITH LETTER 'J'?
 SELECT  *  FROM EMPLOYEE_INFO WHERE EmployeeName NOT LIKE 'J%'   


-- QUERY 14: HOW TO REPORT ALL EMPLOYEES WITH ASCENDING ORDER OF SALARIES? 
SELECT  *  FROM EMPLOYEE_INFO 
SELECT  *  FROM EMPLOYEE_INFO ORDER BY EmployeeSalary  		-- TO ARRANGE THE DATA FROM LOW TO HIGH

-- QUERY 15: HOW TO REPORT ALL EMPLOYEES WITH DESCENDING ORDER OF SALARIES? 
SELECT  *  FROM EMPLOYEE_INFO ORDER BY EmployeeSalary   DESC	-- TO ARRANGE THE DATA FROM HIGH TO LOW

-- QUERY 16: HOW TO REPORT TOP 2 EMPLOYEES WITH HIGHEST SALARY ?
SELECT  TOP 2 *  FROM EMPLOYEE_INFO ORDER BY EmployeeSalary DESC



-- QUERY 17: HOW TO REPORT MAXIMUM SALARY OUT OF (FOR) ALL EMPLOYEES ? 
SELECT * FROM EMPLOYEE_INFO
SELECT EmployeeID, EmployeeName, EmployeeSalary FROM EMPLOYEE_INFO
SELECT EmployeeSalary FROM EMPLOYEE_INFO

SELECT MAX( EmployeeSalary ) FROM EMPLOYEE_INFO						 -- MAX( ) IS A PREDEFINED FUNCTION
SELECT MAX( EmployeeSalary ) AS  MAXIMUM_SALARY FROM EMPLOYEE_INFO


-- QUERY 18: HOW TO REPORT MINIMUM SALARY OUT OF (FOR) ALL EMPLOYEES ? 
SELECT MIN( EmployeeSalary ) AS  MNIMUM_SALARY FROM EMPLOYEE_INFO	-- MIN( ) IS A PREDEFINED FUNCTION


/*
CREATE	:	TO CREATE OR DEFINE NEW DATABASE OR TABLE
USE		:	TO CONNECT TO A SPECIFIC DATABASE

INSERT	:	TO STORE DATA INTO TABLE
SELECT	:	TO REPORT DATA FROM TABLE
	WHERE:	TO SPECIFY CONDITIONS ON TABLE DATA
		
			IN: TO CHECK FOR GIVEN VALUES AND REPORT MATCHING ITEMS
			NOT IN: TO CHECK FOR GIVEN VALUES AND REPORT NON MATCH ITEMS
		
			BETWEEN: TO CHECK FOR GIVEN RANGE OF VALUES
			NOT BETWEEN: TO CHECK FOR DATA OUTSIDE THE GIVEN RANGE OF VALUES

			LIKE:		TO SEARCH FOR TEXT DATA BASED THAT MATCHES WITH A GIVEN PATTERN. 
						EX: SEARCH FOR ALL EMPLOYEES WHOSE NAME STARTING WITH LETTER "J"
			NOT LIKE:	TO SEARCH FOR TEXT DATA BASED THAT DOES NOT MATCH WITH THE GIVEN PATTERN.
						EX: SEARCH FOR ALL EMPLOYEES WHOSE NAME DOES NOT START WITH LETTER "J"

	ORDER BY : USED TO SORT (ARRANGE) THE DATA
			ASC	:		TO SORT THE DATA IN ASCENSING ORDER. LOW TO HIGH. DEFAULT.
			DESC:		TO SORT THE DATA IN DESCENDING ORDER. HIGH TO LOW

	TOP
	MAX(), MIN() 

	SUB QUERY
*/


-- REQUIREMENT : HOW TO REPORT LIST OF ALL EMPLOYEES THAT HAVE HIGHEST SALARY?
SELECT MAX( EmployeeSalary ) FROM EMPLOYEE_INFO	

SELECT * FROM EMPLOYEE_INFO WHERE EmployeeSalary = 60000

SELECT * FROM EMPLOYEE_INFO WHERE EmployeeSalary = (SELECT MAX( EmployeeSalary ) FROM EMPLOYEE_INFO)


-- REQUIREMENT : HOW TO REPORT LIST OF ALL EMPLOYEES THAT HAVE LOWEST SALARY?
SELECT * FROM EMPLOYEE_INFO WHERE EmployeeSalary = (SELECT MIN( EmployeeSalary ) FROM EMPLOYEE_INFO)


-- QUERY 19:  HOW TO MODIFY THE EXISTING DATA IN A TABLE? EX: HOW TO MODIFY SALARIES?
UPDATE EMPLOYEE_INFO SET EmployeeSalary  = 10000 WHERE EmployeeCountry = 'CANADA' 
SELECT * FROM EMPLOYEE_INFO


-- QUERY 20:   HOW TO REMOVE THE LIST OF ALL EMPLOYEES FROM TABLE  [Logged in DATABASE LOG (ldf) FILE]
DELETE FROM EMPLOYEE_INFO WHERE EmployeeCountry = 'CANADA' 
SELECT * FROM EMPLOYEE_INFO

DELETE FROM EMPLOYEE_INFO			-- REMOVES ALL DATA FROM TABLE ROW BY ROW, OPPOSITE OF INSERT STATEMENT
SELECT * FROM EMPLOYEE_INFO

-- QUERY 21:   HOW TO REMOVE THE LIST OF ALL EMPLOYEES FROM TABLE  [NOT Logged in DATABASE LOG (ldf) FILE]
TRUNCATE TABLE EMPLOYEE_INFO		-- REMOVES ALL ROWS FROM THE TABLE AT ONCE 


-- QUERY 22:   	HOW TO ADD NEW COLUMN TO EXISTING TABLE?
ALTER TABLE EMPLOYEE_INFO ADD   [EMP LOCATION]   VARCHAR(30)
SELECT * FROM EMPLOYEE_INFO

-- QUERY 23:	HOW TO MODIFY STRUCTURE OF EXISING COLUMN IN EXISTING TABLE?
ALTER TABLE EMPLOYEE_INFO ALTER COLUMN   [EMP LOCATION]   VARCHAR(3000)


-- QUERY 24:	HOW TO REMOVE AN EXISING COLUMN FROM THE TABLE?
ALTER TABLE EMPLOYEE_INFO DROP COLUMN    [EMP LOCATION]
SELECT * FROM EMPLOYEE_INFO

-- QUERY 25:	HOW TO REMOVE THE TABLE FROM DATABASE?			-- OPPOSITE OF CREATE TABLE STATEMENT
DROP TABLE EMPLOYEE_INFO


/* DIFFERENCE BETWEEN DROP AND DELETE?
	-- DELETE	:	 TO REMOVE THE CONTENT INSIDE THE TABLE
	-- DROP		:	 TO REMOVE THE TABLE ITSELF. DESTROY THE TABLE


TASK 1: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MAXIMUM SALARY?

TASK 2: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM SALARY?

TASK 3: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM OR MAXIMUM SALARY?

TASK 4: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM OR MAXIMUM SALARY IN THE ORDER OF THEIR EMPLOYEE IDs?

TASK 5: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM SALARY FROM INDIA?

TASK 6: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MAXIMUM SALARY FROM INDIA?

TASK 7: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MAXIMUM SALARY FROM INDIA WITH NAME STARTING WITH LETTER A ?

TASK 8: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM SALARY FROM INDIA WITH NAME ENDING WITH LETTER N ?

TASK 9: HOW TO REPORT LIST OF ALL EMPLOYEES WITH HIGHEST SALARY ?

TASK 10: HOW TO REPORT LIST OF ALL EMPLOYEES WITH SALARY VALUE ABOVE THE MINIMUM SALARY ?

Please mail your solution to saiphanindrait@gmail.com

*/