1.	WHAT IS INDEX FRAGMENTATION?
		A PHENOMENA IN WHICH THE DATA PAGES ARE NOT IN CONTINUATION WITH RELEVANT INDEX PAGES.
		MEANS, INDEX PAGES AND DATA PAGES ARE NOT IN SYNC.
		
		IMPACT:
		INDEX SCAN (READS) AND INDEX SEEK (SEARCHES) TAKES MORE TIME TO EXECUTE. 
		ADVERSE IMPACT ON QUERY PERFORMANCE. MEANS, THE QUERIES RUN SLOW.


2. WHAT ARE THE TYPES OF FRAGMENTATION?
	INTERNAL FRAGMENTATION : When records are stored non-contiguously inside the page, 
	then it is called internal fragmentation. In other words, internal fragmentation 
	is said to occur if there is unused space between records in a page. 
	This fragmentation occurs through the process of data modifications 
	(INSERT, UPDATE, and DELETE statements) that are made against the table 
	and therefore, to the indexes defined on the table. 

	EXTERNAL FRAGMENTATION:
	External Fragmentation: When on disk, the physical storage of pages and extents 
	is not contiguous. When the extents of a table are not physically stored 
	contiguously on disk, switching from one extent to another  (EXTENT SWITCH)
	causes higher disk rotations, and this is called Extent Fragmentation.


3.	HOW TO MEASURE FRAGMENTATION?
		BY USING BELOW DMF (Dynamic Management Function):

		SELECT * FROM SYS.DM_DB_INDEX_PHYSICAL_STATS (null, null, null, null, null)
			1ST PARAMETER: DATABASE ID.			OR NULL   : MEANS ALL DATABASES
			2ND PARAMETER: OBJECT ID.			OR NULL   : MEANS ALL TABLES & VIEWS
			3RD PARAMETER: INDEX ID.			OR NULL   : MEANS ALL INDEXES
			4TH PARAMETER: PARTITION NUMBER.	OR NULL   : MEANS ALL PARTITIONS

			5TH PARAMETER: NULL  (SAMPLED ** / DETAILED)


4. HOW TO ADDRESS FRAGMENTATION ISSUES WITH INDEXES?
	OPTION 1: REACTIVE APPROACH
			  INDEX	REBUILD			:	TO RECREATE ALL INDEX PAGES
									APPLICABLE FOR HIGHER FRAGMENTATION LEVELS. ABOVE 30%
									SYNTAX:  	
									ALTER INDEX <INDEXNAME> ON <TABLENAME> 
									REBUILD			

				
			  INDEX REORGANIZE		:   TO REARRANGE THE FRAGMENTED INDEX PAGES
									APPLICABLE FOR LOWER FRAGMENTATION LEVELS. BETWEEN 15% AND 30%
									SYNTAX:  	
									ALTER INDEX <INDEXNAME> ON <TABLENAME> 
									REORGANIZE



	OPTION 2: PROACTIVE APPROACH
			ENSURE AUTOMATED, SCHEDULED INDEX REORGANIZATION @ "DATABASE MAINTENANCE PLANS"
			THIS PREVENTS FRAGMENTATION.
			
		STEPS TO CONFIGURE DATABASE MAINTENANCE PLANS :
		STEP 1: LAUNCH SSMS >> CONNECT TO SERVER 
		STEP 2: RIGHT CLICK AGENT > START
		STEP 3: FROM SERVER >> MANAGEMENT >> MAINTENANCE PLANS >> MAINTENANCE PLAN WIZARD >> 
				SPECIFY A NAME > SPECIFY A SCHEDULE [EVERYDAY @ 12 AM SERVER TIME] > 
				SELECT BELOW ITEMS:
						a. INDEX REORGANIZE
						b. UPDATE STATISTICS
				SPECIFY THE ORDER AS LISTED ABOVE. 

		STEP 4:	INDEX REROGANIZE::		SELECT ALL DATABASES
										COMPRESS LARGE OBJECTS 
										SCAN TYPE (FAST, SAMPLED, DETAILED *)
										OPTIMIZATION OPTIONS:
											FRAGMENATION CONDITION   > 15%
											PAGE COUNT CONDITION	 > 1000
											USAGE CONDITION			 7 DAYS

		STEP 5:	UPDATE STATISTICS::		SELECT ALL DATABASES
										FULL SCAN
		STEP 6: WRITE REPORT TO A TXT FILE [LOG]  > FINISH > CLOSE. 
		STEP 7: OPTIONAL.
				RIGHT CLICK MAINTENANCE PLAN > EXECUTE